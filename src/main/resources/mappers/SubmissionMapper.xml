<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="etms.web.mapper.SubmissionMapper">
    <resultMap id="SubmissionResultMap" type="etms.web.model.Submission">
        <id property="submissionId" column="submission_id"/>
        <result property="problemId" column="problem_id"/>
        <result property="uid" column="uid"/>
        <result property="submitTime" column="submission_submit_time"/>
        <result property="judgeScore" column="submission_judge_score"/>
        <result property="submissionContext" column="submission_context"/>
    </resultMap>

    <select id="getNumberOfSubmissionsUsingDate"
            parameterType="map"
            resultType="long"
            useCache="true">
        SELECT COUNT(*)
        FROM etms_submissions
        <where>
            <if test="startTime != null">
                submission_submit_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND submission_submit_time &lt; #{endTime}
            </if>
        </where>
    </select>

    <select id="getNumberOfSubmissionsUsingProblemIdAndUsername"
            parameterType="map"
            resultType="long"
            useCache="true">
        SELECT COUNT(*)
        FROM etms_submissions
        NATURAL JOIN etms_users
        <where>
            <if test="problemId != 0">
                problem_id = #{problemId}
            </if>
            <if test="username != null and username != ''">
                AND username = #{username}
            </if>
        </where>
    </select>

    <select id="getNumberOfSubmissionsGroupByMonth"
            parameterType="map"
            resultType="hashmap"
            useCache="true">
        SELECT EXTRACT(YEAR_MONTH FROM submission_submit_time) AS month, COUNT(*) as submissions
        FROM `etms_submissions`
        WHERE submission_submit_time &gt;= #{startTime} AND submission_submit_time &lt; #{endTime}
        <if test="uid != 0">
            AND uid = #{uid}
        </if>
        GROUP BY EXTRACT(YEAR_MONTH FROM submission_submit_time)
    </select>

    <select id="getNumberOfSubmissionsGroupByDay"
            parameterType="map"
            resultType="hashmap"
            useCache="true">
        SELECT DATE(submission_submit_time) AS date, COUNT(*) as submissions
        FROM `etms_submissions`
        WHERE submission_submit_time &gt;= #{startTime} AND submission_submit_time &lt; #{endTime}
        <if test="uid != 0">
            AND uid = #{uid}
        </if>
        GROUP BY DATE(submission_submit_time)
    </select>

    <select id="getLatestSubmissionId"
            resultType="long"
            useCache="false">
        SELECT IFNULL(MAX(submission_id), 0)
        FROM etms_submissions
    </select>

    <select id="getSubmission"
            parameterType="long"
            resultMap="SubmissionResultMap"
            useCache="false">
        SELECT *
        FROM etms_submissions
        WHERE submission_id = #{submissionId}
    </select>

    <select id="getSubmissions"
            parameterType="map"
            resultMap="SubmissionResultMap"
            useCache="true">
        SELECT *
        FROM etms_submissions
        NATURAL JOIN etms_users
        <where>
            <if test="problemId != 0">
                problem_id = #{problemId}
            </if>
            <if test="username != null and username != ''">
                AND username = #{username}
            </if>
        </where>
        LIMIT #{limit}
        ORDER BY submission_id DESC
    </select>

    <select id="getSubmissionsUsingOffset"
            parameterType="map"
            resultMap="SubmissionResultMap"
            useCache="true">
        SELECT *
        FROM etms_submissions
        NATURAL JOIN etms_users
        WHERE submission_id &lt;= #{submissionId}
        <if test="problemId != 0">
            AND problem_id = #{problemId}
        </if>
        <if test="username != null and username != ''">
            AND username = #{username}
        </if>
        ORDER BY submission_id DESC
        LIMIT #{limit}
    </select>

    <select id="getLatestSubmissionsUsingOffset"
            parameterType="map"
            resultMap="SubmissionResultMap"
            useCache="true">
        SELECT *
        FROM etms_submissions
        NATURAL JOIN etms_users
        WHERE submission_id &gt;= #{submissionId}
        <if test="problemId != 0">
            AND problem_id = #{problemId}
        </if>
        <if test="username != null and username != ''">
            AND username = #{username}
        </if>
        ORDER BY submission_id
        LIMIT #{limit}
    </select>

    <select id="getSubmissionUsingProblemIdAndUserId"
            parameterType="map"
            resultMap="SubmissionResultMap"
            useCache="true">
        SELECT *
        FROM etms_submissions
        WHERE problem_id = #{problemId}
          AND uid = #{uid}
        ORDER BY submission_id DESC
        LIMIT #{limit}
    </select>

    <select id="getLatestSubmissionOfProblems"
            parameterType="map"
            resultMap="SubmissionResultMap"
            useCache="true">
        SELECT submission_id, s1.problem_id, submission_judge_score
        FROM etms_submissions s1
                 INNER JOIN (
            SELECT MAX(submission_id) AS max_submission_id, problem_id
            FROM etms_submissions
            WHERE uid = #{uid}
              AND problem_id &gt;= #{problemIdLowerBound}
              AND problem_id &lt;= #{problemIdUpperBound}
            GROUP BY problem_id
        ) s2 ON s1.problem_id = s2.problem_id AND s1.submission_id = s2.max_submission_id
    </select>


    <select id="getTotalSubmissionUsingUserId"
            parameterType="long"
            resultType="long"
            useCache="true">
        SELECT COUNT(*)
        FROM etms_submissions
        WHERE uid = #{uid}
    </select>

    <insert id="createSubmission"
            parameterType="etms.web.model.Submission"
            flushCache="true"
            keyProperty="submissionId"
            keyColumn="submission_id"
            useGeneratedKeys="true">
        INSERT INTO etms_submissions(problem_id, uid, submission_submit_time, submission_context)
        VALUES (#{problem.problemId}, #{user.uid}, #{submitTime}, #{submitContext})
    </insert>

    <update id="updateSubmission"
            parameterType="etms.web.model.Submission"
            flushCache="true">
        UPDATE etms_submissions
        SET problem_id              = #{problem.problemId},
            uid                     = #{user.uid},
            submission_submit_time  = #{submitTime},
            submission_judge_score  = #{judgeScore}
        WHERE submission_id = #{submissionId}
    </update>

    <delete id="deleteSubmission"
            parameterType="long"
            flushCache="true">
        DELETE
        FROM etms_submissions
        WHERE submission_id = #{submissionId}
    </delete>

</mapper>